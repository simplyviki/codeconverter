import ast
import os

import streamlit as st
import dotenv
import transformers
from dotenv.main import load_dotenv
from langchain.chat_models import ChatOpenAI


def main():
    load_dotenv()
    hf_api_key = os.getenv('OPENAI_API_KEY')
    # print(hf_api_key)

    st.title("Code Conversion App")

    source_language = st.selectbox("Source Language", ["SAS", "Python"])
    destination_language = st.selectbox("Destination Language", ["Python", "SAS"])

    code = st.text_input("Enter the code to be converted:")

    if st.button("Convert Code"):
        # hf_api_key = st.secrets["hf_api_key"]
        llm = ChatOpenAI()
        # llm = HuggingFaceHub(repo_id="google/flan-t5-xxl", model_kwargs={"temperature": 0.5, "max_length": 512})
        # ssl_verify = False
        # model = transformers.AutoModel.from_pretrained("code-davinci-002")
        statements = ast.parse(code)
        prompts = [repr(ast.literal_eval(s)) for s in statements]
        for i, statement in enumerate(prompts):
            if "proc print" in statement:
                prompts[i] = "# proc print"
        print(prompts)
        converted_code = llm.generate(prompts, target_language=destination_language)
        st.write("Converted Code:")
        st.write(converted_code)


if __name__ == "__main__":
    main()
